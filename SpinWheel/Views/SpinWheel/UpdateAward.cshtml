@model SpinWheel.ViewModel.InsertAwardViewModel
@{
    ViewBag.Title = "Cập nhật giải thưởng";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<a class="btn quick-link" href="@Url.Action("ListAward","SpinWheel")"><i class="far fa-list mr-1"></i> Danh sách giải thưởng</a>
<div class="box_content">
    @using (Html.BeginForm("UpdateAward", "SpinWheel", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Award.Id)
        <table class="form_table">
            <tr>
                <td class="form_name">@Html.LabelFor(model => model.Award.EventId)</td>
                <td class="form_text">
                    <select name="EventId" class="form_control w300" required="">
                        <option value="">Danh mục sự kiện</option>
                        @foreach (var events in Model.Events)
                        {
                            <option value="@events.Id"
                                    @if (events.Id == Model.Award.EventId) { @Html.Raw("selected='selected'") }>
                                @events.EventName
                            </option>
                        }
                    </select>
                </td>
            </tr>
            <tbody>
                <tr>
                    <th style="width: 300px;">@Html.LabelFor(model => model.Award.AwardName)</th>
                    <th>@Html.LabelFor(model => model.Award.BgColor)</th>
                    <th>@Html.LabelFor(model => model.Award.TextColor)</th>
                    <th>@Html.LabelFor(model => model.Award.Percent)</th>
                    <th>@Html.LabelFor(model => model.Award.Quantity)</th>
                    <th style="width: 150px;"></th>
                </tr>
                <tr>
                    <td class="form_text">@Html.EditorFor(model => model.Award.AwardName)</td>
                    <td class="form_text">
                        @Html.TextBoxFor(model => model.Award.BgColor, new Dictionary<string, object>
                            { { "data-jscolor",
                                "{required:true, " +
                                "closeButton:true, " +
                                "closeText:'Đóng', " +
                                "backgroundColor:'#333', " +
                                "buttonColor:'#FFF'}"
                        } })
                    </td>
                    <td class="form_text">
                        @Html.TextBoxFor(model => model.Award.TextColor, new Dictionary<string, object>
                            { { "data-jscolor",
                                "{required:true, " +
                                "closeButton:true, " +
                                "closeText:'Đóng', " +
                                "backgroundColor:'#333', " +
                                "buttonColor:'#FFF'}"
                        } })
                    </td>
                    <td class="form_text">@Html.TextBoxFor(model => model.Award.Percent)</td>
                    <td class="form_text">@Html.TextBoxFor(model => model.Award.Quantity, new { @class = "quantity" })</td>
                    <td class="form_text">@Html.CheckBoxFor(model => model.Award.Limited, new { @class = "check" }) Không giới hạn</td>
                </tr>
            </tbody>
            <tr>
                <td class="form_text">
                    <input type="submit" class="btn quick-link" value="Cập nhật" />
                </td>
            </tr>
        </table>
    }
</div>
@section scripts{
    <script>
        var check = $('.check');
        if (check.attr("checked")) {
            $(".quantity").attr("disabled", 'disabled');
        }
        check.change(function () {
            if (this.checked) {
                $(".quantity").attr("disabled", 'disabled');
            }
            else {
                $(".quantity").removeAttr("disabled");
            }
        });
    </script>
}