@model SpinWheel.ViewModel.EventViewModel

@Html.HiddenFor(model => model.Event.Url)
<div class="wrapper row m-0">
    <div class="col-lg-6 col-12">
        <form class="card-info">
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()
            <div class="card-header">
                <span>XÁC NHẬN THÔNG TIN</span>
                <a href="javascript:;" onclick="updateInfo()">Cập nhật</a>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Họ tên: <input type="text" id="fullname" value="" readonly /></li>
                <li class="list-group-item">
                    Số điện thoại:
                    @Html.TextBoxFor(a => Model.Client.Mobile, new { @readonly = "" })
                    @Html.ValidationMessageFor(a => Model.Client.Mobile)
                </li>
            </ul>
            <button type="submit" class="btn-spin">Quay</button>
        </form>

        <div class="winner">
            <div class="award-text"></div>
            <img src="" alt="" class="award-img" />
            <div class="btn-continue" onclick="Continue()">
                TIẾP TỤC QUAY
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-12">
        <div class="mainbox">
            <canvas id="canvas"
                    width="600"
                    height="600"
                    data-responsiveMinWidth="180"
                    data-responsiveScaleHeight="true"
                    data-responsiveMargin="50">
                <p style="color: white">
                    Sorry, your browser doesn't support canvas.
                    Please try another.
                </p>
            </canvas>
            <div class="border-spin"></div>
            <div class="start-spin" onclick="startSpin()">
                <span>QUAY</span>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="Modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <h5 class="modal-title">Mời bạn nhập thông tin</h5>
            <div class="modal-body text-center">
                <form id="info-form">
                    @Html.ValidationSummary(true)
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="eventId" value="@Model.Event.Id" />
                    <div class="input-box">
                        <input type="text" class="form-control mx-auto" name="fullname" required="required" />
                        <span class="text-input">Họ và tên</span>
                    </div>
                    <div class="input-box">
                        @Html.TextBoxFor(a => Model.Mobile, new { @class = "form-control my-3 mx-auto info-mobile", @required = "required" })
                        @Html.ValidationMessageFor(a => Model.Mobile)
                        <span class="text-input">Số điện thoại</span>
                    </div>
                    <button type="submit" class="btn btn-confirm">Xác nhận</button>
                    <button type="button" class="btn btn-close" onclick="closeModal()">Đóng</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        var gifts = [];
        var url = $("#Event_Url").val();

        $.getJSON("/Home/GetAwardData", { url: url }, function (data) {
            $.each(data, function (key, val) {
                var percent = winwheelPercentToDegrees(val.percent);
                if (percent === 0) {
                    theWheel.addSegment({
                        'text': val.name,
                        'fillStyle': val.bgColor,
                        'textFillStyle': val.txtColor,
                        'textFontSize': 20,
                        'textMargin': 25,
                        'quantity': val.quantity,
                        'totalwin': val.totalWin,
                        'id': val.id,
                        'image': val.image,
                    }, 1);
                }
                else {
                    theWheel.addSegment({
                        'text': val.name,
                        'fillStyle': val.bgColor,
                        'textFillStyle': val.txtColor,
                        'textAlignment': 'center',
                        'textMargin': 20,
                        'size': percent,
                        'quantity': val.quantity,
                        'totalwin': val.totalWin,
                        'id': val.id,
                        'image': val.image,
                    }, 1);
                }
            });
        });
        function ChangeBackground(x) {
            $.getJSON("/Home/GetAwardData", { url: url }, function (data) {
                $.each(data, function (key, val) {
                    if (x.matches) {
                        $(".wrapper").css("background", "url(images/events/" + val.bgMobile + ") no-repeat top center / 100% 100%");
                    }
                    else {
                        $(".wrapper").css("background", "url(images/events/" + val.bgPc + ") no-repeat top center / 100% 100%");
                    }
                });
            });
        }
        var x = window.matchMedia("(max-width: 840px)");
        ChangeBackground(x);
        x.addListener(ChangeBackground);

        const theWheel = new Winwheel({
            numSegments: gifts.length,
            segments: gifts,
            outerRadius: 300,
            innerRadius: 40,
            textFontSize: 18,
            responsive: true,
            animation: {
                type: "spinToStop",
                duration: 10,
                spins: 12,
                callbackSound: playSound,
                callbackFinished: alertPrize,
            }
        });
        let tick = new Audio("./content/sound/tick.mp3");
        let clickingsound = new Audio("./content/sound/clickingsound.mp3");
        let confirmInfo = new Audio("./content/sound/foundMa.mp3");
        let winner = new Audio("./content/sound/fanfare-winner.mp3");

        function playSound() {
            tick.pause();
            tick.currentTime = 0;
            tick.play();
        }

        let wheelSpinning = false;

        function StatusButton(status) {
            if (status == 1) {
                document
                    .querySelector(".border-spin")
                    .removeAttribute("disabled");
            } else if (status == 2) {
                document
                    .querySelector(".border-spin")
                    .setAttribute("disabled", false);
                btnSpin.fadeOut(1000);
            } else if (status == 3) {
                document
                    .querySelector(".border-spin")
                    .removeAttribute("disabled");

                theWheel.stopAnimation(false);
                theWheel.rotationAngle = 0;
                theWheel.draw();

                wheelSpinning = false;
            }
        }
        StatusButton(1);

        var confirmPhone = $("#Client_Mobile");
        var checkPhone = /^\(?(09|03|07|08|05)\)?[-. ]?([0-9]{8})$/;
        var btnSpin = $('.btn-spin');

        $('.card-info').on("submit", function (e) {
            e.preventDefault();
            if (confirmPhone.valid() == false) {
                clickingsound.play();
            }
            else {
                if (wheelSpinning == false) {
                    StatusButton(1);
                    theWheel.startAnimation();
                    wheelSpinning = true;
                    StatusButton(2);
                }
            }
        });

        $("#info-form").on("submit", function (e) {
            e.preventDefault();
            var fullName = $("[name=fullname]").val();
            var phone = $(".info-mobile").val();
            if (fullName == "" || phone == "") {
                clickingsound.play();
                Swal.fire({
                    icon: "warning",
                    text: "Vui lòng nhập đủ thông tin",
                });
            }
            else if (phone.match(checkPhone)) {
                $("#Modal").modal('hide');
                $(".card-info").addClass("active");
                $("#fullname").val(fullName);
                $("#Client_Mobile").val(phone);
                confirmInfo.play();
            }
            else {
                clickingsound.play();
            }
        });

        function updateInfo() {
            $("#fullname").removeAttr("readonly");
            $("#fullname").focus();
            $("#Client_Mobile").removeAttr("readonly");
        }

        function startSpin() {
            var phone = $(".info-mobile").val();
            var fullName = $("[name=fullname]").val();
            var eventId = $("[name=eventId]").val();

            var isPost = true;

            if (fullName == "" || phone == "") {
                $('#Modal').modal('show');
            }

            if (phone == "") {
                isPost = false;
            }
            if (isPost) {
                $.getJSON("/Home/GetClientData", { phone: phone, eventId: eventId }, function (data) {
                    if (data == 1) {
                        if (wheelSpinning == false) {
                            StatusButton(1);
                            theWheel.startAnimation();
                            wheelSpinning = true;
                            StatusButton(2);
                        }
                    }
                    else {
                        clickingsound.play();
                        Swal.fire({
                            icon: 'error',
                            text: 'Số lượt quay trong ngày đã hết!!',
                            confirmButtonText: "Nhập lại thông tin",
                            confirmButtonColor: "#3085d6",
                        }).then((result) => {
                            if (result.isConfirmed) {
                                location.reload();
                            }
                        });
                    }
                });
            }
        }

        function alertPrize() {
            let winningSegment = theWheel.getIndicatedSegment();
            const quantity = parseInt(winningSegment.quantity);
            const totalWin = parseInt(winningSegment.totalwin);

            if (quantity <= totalWin) {
                clickingsound.play();
                Swal.fire({
                    title: "Số lượng giải <span>" + winningSegment.text + "</span> đã hết",
                    text: "Bạn có 1 lượt quay mới",
                    icon: "warning",
                    confirmButtonText: "Xác nhận",
                    confirmButtonColor: "#218838",
                }).then((result) => {
                    StatusButton(3);
                });
            }
            else {
                winner.play();
                $('.winner').addClass('active');
                if (winningSegment.image == "") {
                    $('.award-text').html(winningSegment.text);
                } else {
                    $('.award-text').html(winningSegment.text);
                    $('.award-img').attr({
                        src: "images/awards/" + winningSegment.image,
                        alt: winningSegment.text,
                    });
                }
                var fullName = $("#fullname").val();
                var phone = $("#Client_Mobile").val();
                $.post("/Home/InfoForm", { phone: phone, fullName: fullName, prize: winningSegment.text, awardId: winningSegment.id }, function (data) {
                })

                StatusButton(3);
            }
        }

        function Continue() {
            Swal.fire({
                text: "Bạn có muốn quay tiếp vòng quay không?",
                icon: "question",
                confirmButtonText: "Quay tiếp",
                confirmButtonColor: "#3085d6",
                showCancelButton: true,
                cancelButtonColor: '#d33',
                cancelButtonText: "Đóng",
            }).then((result) => {
                if (result.isConfirmed) {
                    location.reload();
                }
            });
        }

        $('.modal').click(function () {
            $("#info-form").trigger("reset");
        });

        $('.modal-content').click(function (e) {
            e.stopImmediatePropagation();
        });

        function closeModal() {
            $('#Modal').modal('hide');
            $("#info-form").trigger("reset");
        }
    </script>
}